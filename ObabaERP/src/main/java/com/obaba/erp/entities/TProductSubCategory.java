package com.obaba.erp.entities;
// Generated 25 Nov, 2018 1:41:19 AM by Hibernate Tools 5.1.7.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * TProductSubCategory generated by hbm2java
 */
@Entity
@Table(name = "t_product_sub_category", catalog = "demo", uniqueConstraints = @UniqueConstraint(columnNames = "sub_category_name"))
public class TProductSubCategory implements java.io.Serializable {

	private Integer subCategoryId;
	@JsonIgnore
	private TProductCategory TProductCategory;
	private String subCategoryName;
	private String subCategoryDesc;
	private String bannerImageUrl;
	private Date createDate;
	private String createdBy;
	private Date updateDate;
	private String updatedBy;
	private String imageUrl;
	private Set<TProducts> TProductses = new HashSet<TProducts>(0);

	public TProductSubCategory() {
	}

	public TProductSubCategory(TProductCategory TProductCategory, String subCategoryName) {
		this.TProductCategory = TProductCategory;
		this.subCategoryName = subCategoryName;
	}

	public TProductSubCategory(TProductCategory TProductCategory, String subCategoryName, String subCategoryDesc,
			String bannerImageUrl, Date createDate, String createdBy, Date updateDate, String updatedBy,
			String imageUrl, Set<TProducts> TProductses) {
		this.TProductCategory = TProductCategory;
		this.subCategoryName = subCategoryName;
		this.subCategoryDesc = subCategoryDesc;
		this.bannerImageUrl = bannerImageUrl;
		this.createDate = createDate;
		this.createdBy = createdBy;
		this.updateDate = updateDate;
		this.updatedBy = updatedBy;
		this.imageUrl = imageUrl;
		this.TProductses = TProductses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "sub_category_id", unique = true, nullable = false)
	public Integer getSubCategoryId() {
		return this.subCategoryId;
	}

	public void setSubCategoryId(Integer subCategoryId) {
		this.subCategoryId = subCategoryId;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public TProductCategory getTProductCategory() {
		return null;
	}

	public void setTProductCategory(TProductCategory TProductCategory) {
		this.TProductCategory = TProductCategory;
	}

	@Column(name = "sub_category_name", unique = true, nullable = false)
	public String getSubCategoryName() {
		return this.subCategoryName;
	}

	public void setSubCategoryName(String subCategoryName) {
		this.subCategoryName = subCategoryName;
	}

	@Column(name = "sub_category_desc")
	public String getSubCategoryDesc() {
		return this.subCategoryDesc;
	}

	public void setSubCategoryDesc(String subCategoryDesc) {
		this.subCategoryDesc = subCategoryDesc;
	}

	@Column(name = "banner_image_url")
	public String getBannerImageUrl() {
		return this.bannerImageUrl;
	}

	public void setBannerImageUrl(String bannerImageUrl) {
		this.bannerImageUrl = bannerImageUrl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "created_by")
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "updated_by")
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Column(name = "image_url")
	public String getImageUrl() {
		return this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "TProductSubCategory")
	@Fetch(FetchMode.SELECT)
	public Set<TProducts> getTProductses() {
		return this.TProductses;
	}

	public void setTProductses(Set<TProducts> TProductses) {
		this.TProductses = TProductses;
	}

}
