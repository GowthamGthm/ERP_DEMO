package com.obaba.erp.entities;
// Generated 25 Nov, 2018 1:41:19 AM by Hibernate Tools 5.1.7.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * TOrders generated by hbm2java
 */
@Entity
@Table(name = "t_orders", catalog = "demo")
public class TOrders implements java.io.Serializable {

	private Integer id;
	private TUser TUser;
	private int totalPrice;
	private Integer itemCount;
	private Character freeShipping;
	private String paymentType;
	private String orderStatus;
	private Date createDate;
	private Date updateDate;
	private Integer createdBy;
	private Integer updatedBy;
	private Set<TOrderDetails> TOrderDetailses = new HashSet<TOrderDetails>(0);

	public TOrders() {
	}

	public TOrders(TUser TUser, int totalPrice) {
		this.TUser = TUser;
		this.totalPrice = totalPrice;
	}

	public TOrders(TUser TUser, int totalPrice, Integer itemCount, Character freeShipping, String paymentType,
			String orderStatus, Date createDate, Date updateDate, Integer createdBy, Integer updatedBy,
			Set<TOrderDetails> TOrderDetailses) {
		this.TUser = TUser;
		this.totalPrice = totalPrice;
		this.itemCount = itemCount;
		this.freeShipping = freeShipping;
		this.paymentType = paymentType;
		this.orderStatus = orderStatus;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.TOrderDetailses = TOrderDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public TUser getTUser() {
		return null;
	}

	public void setTUser(TUser TUser) {
		this.TUser = TUser;
	}

	@Column(name = "total_price", nullable = false)
	public int getTotalPrice() {
		return this.totalPrice;
	}

	public void setTotalPrice(int totalPrice) {
		this.totalPrice = totalPrice;
	}

	@Column(name = "item_count")
	public Integer getItemCount() {
		return this.itemCount;
	}

	public void setItemCount(Integer itemCount) {
		this.itemCount = itemCount;
	}

	@Column(name = "free_shipping", length = 1)
	public Character getFreeShipping() {
		return this.freeShipping;
	}

	public void setFreeShipping(Character freeShipping) {
		this.freeShipping = freeShipping;
	}

	@Column(name = "payment_type", length = 50)
	public String getPaymentType() {
		return this.paymentType;
	}

	public void setPaymentType(String paymentType) {
		this.paymentType = paymentType;
	}

	@Column(name = "order_status", length = 55)
	public String getOrderStatus() {
		return this.orderStatus;
	}

	public void setOrderStatus(String orderStatus) {
		this.orderStatus = orderStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_date", length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_date", length = 19)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "created_by")
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@JsonIgnore
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "TOrders")
	public Set<TOrderDetails> getTOrderDetailses() {
		return this.TOrderDetailses;
	}

	public void setTOrderDetailses(Set<TOrderDetails> TOrderDetailses) {
		this.TOrderDetailses = TOrderDetailses;
	}

}
